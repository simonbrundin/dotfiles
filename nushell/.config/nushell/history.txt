n
config nu
starship
config nu
starship
s i starship
nu
bash
starship
bash
zsh
sh
brew install starship
bash
config nu
envs
bash
env
$env
$env | get path
$env | get PATH
let-env OMARCHY_PATH = ($"~/.local/share/omarchy" | path expand)<\n>let-env PATH = [<\n>    $env.OMARCHY_PATH/bin<\n>    /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin<\n>    /opt/homebrew/bin /opt/homebrew/sbin<\n>    /home/simon/repos/simon-cli<\n>    ...$env.PATH<\n>]
$env.OMARCHY_PATH = ($"~/.local/share/omarchy" | path expand)<\n>$env.PATH = [<\n>    ($env.OMARCHY_PATH / bin)<\n>    "/usr/local/bin"<\n>    "/usr/bin"<\n>    "/bin"<\n>    "/usr/local/sbin"<\n>    "/usr/sbin"<\n>    "/sbin"<\n>    "/opt/homebrew/bin"<\n>    "/opt/homebrew/sbin"<\n>    "/home/simon/repos/simon-cli"<\n>    ...$env.PATH<\n>]
$env.OMARCHY_PATH = ($"~/.local/share/omarchy" | path expand)<\n>$env.PATH = [<\n>    ($env.OMARCHY_PATH / "bin")<\n>    "/usr/local/bin"<\n>    "/usr/bin"<\n>    "/bin"<\n>    "/usr/local/sbin"<\n>    "/usr/sbin"<\n>    "/sbin"<\n>    "/opt/homebrew/bin"<\n>    "/opt/homebrew/sbin"<\n>    "/home/simon/repos/simon-cli"<\n>    ...$env.PATH<\n>]
$env.OMARCHY_PATH = $"~/.local/share/omarchy" | path expand<\n>$env.PATH = [<\n>    ($env.OMARCHY_PATH | path join "bin")<\n>    "/usr/local/bin"<\n>    "/usr/bin"<\n>    "/bin"<\n>    "/usr/local/sbin"<\n>    "/usr/sbin"<\n>    "/sbin"<\n>    "/opt/homebrew/bin"<\n>    "/opt/homebrew/sbin"<\n>    "/home/simon/repos/simon-cli"<\n>    ...$env.PATH<\n>]
nvim
nu
s i nushell
nushell
whoami
$env
ai
z dotfiles
z repos
git clone git@github.com:simonbrundin/devenv.git
z devenv
nvim
z devenv
nvim
z simon-cli
z ..
z simon-cli
nvim
z devenv
nvim
yazi
z boot
bash bootstrap.sh
nvim
curl -sL bootstrap.simonbrundin.com | bash
nvim
simon setup mac
simon bootstrap mac
nvim
n
nvim
config nu
n
ai
simon ai
shell
simon ai
nvim
curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh
which atuin
ai
env
envs
env
$env
n
nvim
config nu
bash bootstrap.sh
atuin
bash bootstrap.sh
hej
atuin
z boot
bash bootstrap.sh
ai
bash bootstrap.sh
$nev
$env
bash bootstrap.sh
nu
config nu
nu
config nu
nu
config env
nu
hej
nu
config nu
nu
config nu
nu
config nu
z repos
l
ls
ll
git status
lazygit
z boot
lg
config nu
lg
z ..
ls
z devenv
lg
z dot
lg
z cli
lg
sudo pacman -S --needed git base-devel<\n>git clone https://aur.archlinux.org/yay.git<\n>cd yay<\n>makepkg -si
yay -S hunspell-sv
sudo pacman -S hunspell-sv
which hunspell-sv
sudo pacman -S hunspell-sv
yay -S hunspell-sv
s i kanata
z dotfiles
yazi
kanata -c ~/.config/kanata/kanata.kbd
<\n>sudo modprobe uinput
sudo usermod -a -G uinput $USER
sudo usermod -a -G uinput $env.USER
ai
z dotfiles
ai
z dot
kanata -c ~/.config/kanata/kanata.kbd
sudo kanata -c ~/.config/kanata/kanata.kbd
which kanata
sudo usermod -aG uinput $USER
ai
z dot
sudo systemctl start kanata
systemctl --user start kanata
sudo cp kanata/etc/udev/rules.d/99-uinput.rules /etc/udev/rules.d/ && sudo udevadm control --reload-rules && sudo udevadm trigger
z dot
sudo usermod -aG uinput $USER
nvim 
nvim /etc/udev/rules.d/99-uinput.rules
sudo sed -i 's/uinput/input/' /etc/udev/rules.d/99-uinput.rules<\n>sudo udevadm control --reload-rules<\n>sudo udevadm trigger
systemctl --user restart kanata
sudo modprobe -r uinput<\n>sudo modprobe uinput
systemctl --user<\n>restart kanata
systemctl --user restart kanata
sudo sed -i 's/KERNEL=="input"/KERNEL=="uinput"/' /etc/udev/rules.d/99-uinput.rules<\n>sudo modprobe -r uinput<\n>sudo modprobe uinput
systemctl --user restart kanata
sudo sed -i 's/GROUP="uinput"/GROUP="input"/' /etc/udev/rules.d/99-uinput.rules<\n>sudo modprobe -r uinput<\n>sudo modprobe uinput
systemctl --user restart kanata
ai
z 
z repos
sudo evtest /dev/input/event3
z dotf
nvim
simon kanata restart
ai
z dot
nvim
sudo modprobe uinput<\n>sudo udevadm control --reload-rules<\n>sudo udevadm trigger
systemctl --user restart kanat
systemctl --user restart kanata
ai
z dot
nvim
n
s kanata restart
./kanata/install-kanata.sh
sudo loginctl enable-linger $USER
z dot
